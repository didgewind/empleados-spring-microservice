# Datasource
spring:
  datasource:
     url: jdbc:mysql://localhost:3306/empleados_simple

# Username and password
     username: maza
     password: maza

# Keep the connection alive if idle for a long time (needed in production)
     testWhileIdle: true
     validationQuery: SELECT 1

  application:
     name: empleados-service

  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: sagaControlEvents
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    properties:
      spring:
        json:
          trusted:
            packages: profe.empleados.model
            
eureka:
  client:
    enabled: true
    serviceUrl:
      defaultZone: http://localhost:1111/eureka/
  instance:
    leaseRenewalIntervalInSeconds: 5
# Generamos id aleatorio para poder registrar diferentes instancias con eureka
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
      
server:
# Puerto aleatorio
#  port: ${PORT:0}
  port: 5555
  
management:
  endpoints:
    web:
      exposure:
        include: "*"

app:
  empleadosTopic: empleados-events
  sagaControlTopic: saga-control-events
 